`configure' configures HDF5 1.8.15-patch1 to adapt to many kinds of systems.

Usage: ./configure [OPTION]... [VAR=VALUE]...

To assign environment variables (e.g., CC, CFLAGS...), specify them as
VAR=VALUE.  See below for descriptions of some of the useful variables.

Defaults for the options are specified in brackets.

Configuration:
  -h, --help              display this help and exit
      --help=short        display options specific to this package
      --help=recursive    display the short help of all the included packages
  -V, --version           display version information and exit
  -q, --quiet, --silent   do not print `checking ...' messages
      --cache-file=FILE   cache test results in FILE [disabled]
  -C, --config-cache      alias for `--cache-file=config.cache'
  -n, --no-create         do not create output files
      --srcdir=DIR        find the sources in DIR [configure dir or `..']

Installation directories:
  --prefix=PREFIX         install architecture-independent files in PREFIX
                          [/home/vagrant/tmp/hdf5-1.8.15-patch1/hdf5]
  --exec-prefix=EPREFIX   install architecture-dependent files in EPREFIX
                          [PREFIX]

By default, `make install' will install all the files in
`/home/vagrant/tmp/hdf5-1.8.15-patch1/hdf5/bin', `/home/vagrant/tmp/hdf5-1.8.15-patch1/hdf5/lib' etc.  You can specify
an installation prefix other than `/home/vagrant/tmp/hdf5-1.8.15-patch1/hdf5' using `--prefix',
for instance `--prefix=$HOME'.

For better control, use the options below.

Fine tuning of the installation directories:
  --bindir=DIR            user executables [EPREFIX/bin]
  --sbindir=DIR           system admin executables [EPREFIX/sbin]
  --libexecdir=DIR        program executables [EPREFIX/libexec]
  --sysconfdir=DIR        read-only single-machine data [PREFIX/etc]
  --sharedstatedir=DIR    modifiable architecture-independent data [PREFIX/com]
  --localstatedir=DIR     modifiable single-machine data [PREFIX/var]
  --libdir=DIR            object code libraries [EPREFIX/lib]
  --includedir=DIR        C header files [PREFIX/include]
  --oldincludedir=DIR     C header files for non-gcc [/usr/include]
  --datarootdir=DIR       read-only arch.-independent data root [PREFIX/share]
  --datadir=DIR           read-only architecture-independent data [DATAROOTDIR]
  --infodir=DIR           info documentation [DATAROOTDIR/info]
  --localedir=DIR         locale-dependent data [DATAROOTDIR/locale]
  --mandir=DIR            man documentation [DATAROOTDIR/man]
  --docdir=DIR            documentation root [DATAROOTDIR/doc/hdf5]
  --htmldir=DIR           html documentation [DOCDIR]
  --dvidir=DIR            dvi documentation [DOCDIR]
  --pdfdir=DIR            pdf documentation [DOCDIR]
  --psdir=DIR             ps documentation [DOCDIR]

Program names:
  --program-prefix=PREFIX            prepend PREFIX to installed program names
  --program-suffix=SUFFIX            append SUFFIX to installed program names
  --program-transform-name=PROGRAM   run sed PROGRAM on installed program names

System types:
  --build=BUILD     configure for building on BUILD [guessed]
  --host=HOST       cross-compile to build programs to run on HOST [BUILD]

Optional Features:
  --disable-option-checking  ignore unrecognized --enable/--with options
  --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)
  --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]
  --enable-silent-rules   less verbose build output (undo: "make V=1")
  --disable-silent-rules  verbose build output (undo: "make V=0")
  --enable-maintainer-mode
                          enable make rules and dependencies not useful (and
                          sometimes confusing) to the casual installer
  --enable-dependency-tracking
                          do not reject slow dependency extractors
  --disable-dependency-tracking
                          speeds up one-time build
  --enable-unsupported    Allow unsupported combinations of configure options
  --enable-fortran        Compile the Fortran 90/95 interface [default=no]
  --enable-fortran2003    Compile the Fortran 2003 interface, must also
                          specify --enable-fortran [default=no]
  --enable-cxx            Compile the C++ interface [default=no]
  --enable-hl             Enable the high level library [default=yes]
  --enable-shared[=PKGS]  build shared libraries [default=yes]
  --enable-static[=PKGS]  build static libraries [default=yes]
  --enable-fast-install[=PKGS]
                          optimize for fast installation [default=yes]
  --disable-libtool-lock  avoid locking (might break parallel builds)
  --enable-static-exec    Install only statically linked executables
                          [default=no]
  --disable-sharedlib-rpath
                          Disable use of the '=Wl,-rpath' linker option
  --enable-production     Determines how to run the compiler.
  --enable-threadsafe     Enable thread-safe capability
  --enable-debug=all      Turn on debugging in all packages. One may also
                          specify a comma-separated list of package names
                          without the leading H5 or the word no. The default
                          is most packages if production is disabled; no if it
                          is enabled.
  --enable-codestack      Enable the function stack tracing (for developer
                          debugging).
  --enable-metadata-trace-file
                          Enable metadata trace file collection.
  --enable-trace          Enable API tracing capability. Default=no if debug
                          is disabled.
  --enable-instrument     Enable library instrumentation of optimization
                          tracing. Default=no if debug is disabled.
  --enable-clear-file-buffers
                          Securely clear file buffers before writing to file.
                          Default=yes.
  --enable-using-memchecker
                          Enable this option if a memory allocation and/or
                          bounds checking tool will be used on the HDF5
                          library. Enabling this causes the library to be more
                          picky about it's memory operations and also disables
                          the library's free space manager code. Default=no.
  --enable-parallel       Search for MPI-IO and MPI support files
  --enable-direct-vfd     Build the direct I/O virtual file driver (VFD). This
                          is based on the POSIX (sec2) VFD and requires the
                          open() call to take the O_DIRECT flag. [default=no]
  --enable-dconv-exception
                          if exception handling functions is checked during
                          data conversions [default=yes]
  --enable-dconv-accuracy if data accuracy is guaranteed during data
                          conversions [default=yes]
  --enable-build-all      Build helper programs that only developers should
                          need [default=no]
  --enable-deprecated-symbols
                          Enable deprecated public API symbols [default=yes]
  --enable-strict-format-checks
                          Enable strict file format checks, default=yes if
                          debug flag is enabled, no otherwise
  --enable-embedded-libinfo
                          Enable embedded library information [default=yes]

Optional Packages:
  --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]
  --without-PACKAGE       do not use PACKAGE (same as --with-PACKAGE=no)
  --with-pic[=PKGS]       try to use only PIC/non-PIC objects [default=use
                          both]
  --with-gnu-ld           assume the C compiler uses GNU ld [default=no]
  --with-sysroot=DIR Search for dependent libraries within DIR
                        (or the compiler's sysroot if not specified).

 For the following --with-xxx options, you can specify where the header
 files and libraries are in two different ways:

    --with-xxx=INC,LIB - Specify individually the include directory and
                         library directory separated by a comma
    --with-xxx=DIR     - Specify only the directory which contains the
                         include/ and lib/ subdirectories

  --with-dmalloc=DIR      Use dmalloc memory debugging aid [default=no]
  --with-zlib=DIR         Use zlib library for external deflate I/O filter
                          [default=yes]
  --with-szlib=DIR        Use szlib library for external szlib I/O filter
                          [default=no]
  --with-pthread=DIR      Specify alternative path to Pthreads library when
                          thread-safe capability is built
  --with-mpe=DIR          Use MPE instrumentation [default=no]
  --with-default-plugindir=location
                          Specify default location for plugins
                          [default="/usr/local/hdf5/lib/plugin"]
  --with-default-api-version=(v16|v18|v110)
                          Specify default release version of public symbols
                          [default=v18]

Some influential environment variables:
  CC          C compiler command
  CFLAGS      C compiler flags
  LDFLAGS     linker flags, e.g. -L<lib dir> if you have libraries in a
              nonstandard directory <lib dir>
  LIBS        libraries to pass to the linker, e.g. -l<library>
  CPPFLAGS    (Objective) C/C++ preprocessor flags, e.g. -I<include dir> if
              you have headers in a nonstandard directory <include dir>
  FC          Fortran compiler command
  FCFLAGS     Fortran compiler flags
  CXX         C++ compiler command
  CXXFLAGS    C++ compiler flags
  CXXCPP      C++ preprocessor
  CPP         C preprocessor

Use these variables to override the choices made by `configure' or to help
it to find libraries and programs with nonstandard names/locations.

Report bugs to <help@hdfgroup.org>.
